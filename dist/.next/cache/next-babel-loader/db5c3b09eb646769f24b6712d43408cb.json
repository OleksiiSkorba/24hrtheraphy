{"ast":null,"code":"var _jsxFileName = \"E:\\\\programData\\\\React\\\\cams-3\\\\user\\\\pages\\\\auth\\\\login\\\\user.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport FormLogin from '@components/auth/login/user-login-form';\nimport PageBanner from '../../../components/Common/PageBanner';\nimport Head from 'next/head';\nimport { login, resetLoginData } from '@redux/auth/actions';\nimport '../index.less';\n\nclass Login extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"rememberMe\", false);\n\n    _defineProperty(this, \"submit\", data => {\n      const {\n        login: dispatchLogin\n      } = this.props;\n      dispatchLogin(_objectSpread(_objectSpread({}, data), {}, {\n        remember: this.rememberMe\n      }));\n    });\n  }\n\n  componentWillUnmount() {\n    const {\n      resetLoginData: dispatchReset\n    } = this.props;\n    dispatchReset();\n  }\n\n  render() {\n    const {\n      requesting,\n      error,\n      success,\n      ui\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"User sign-in\")), __jsx(PageBanner, {\n      pageTitle: \"Sign In\",\n      homePageUrl: \"/\",\n      homePageText: \"Home\",\n      activePageText: \"Sign In\",\n      imgClass: \"bg-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"user-area-all-style log-in-area ptb-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"contact-form-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(FormLogin, {\n      singularTextModel: (ui === null || ui === void 0 ? void 0 : ui.singularTextModel) || 'Performer',\n      requesting: requesting,\n      submit: this.submit.bind(this),\n      onRemember: value => {\n        this.rememberMe = value;\n      },\n      error: error,\n      success: success,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }))), __jsx(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"log-in-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\n_defineProperty(Login, \"layout\", 'auth');\n\n_defineProperty(Login, \"authenticate\", false);\n\nconst mapStates = state => _objectSpread(_objectSpread({}, state.auth.userLogin), {}, {\n  ui: state.ui\n});\n\nconst mapDispatch = {\n  login,\n  resetLoginData\n};\nexport default connect(mapStates, mapDispatch)(Login);","map":{"version":3,"sources":["E:/programData/React/cams-3/user/pages/auth/login/user.tsx"],"names":["PureComponent","connect","FormLogin","PageBanner","Head","login","resetLoginData","Login","data","dispatchLogin","props","remember","rememberMe","componentWillUnmount","dispatchReset","render","requesting","error","success","ui","singularTextModel","submit","bind","value","mapStates","state","auth","userLogin","mapDispatch"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport FormLogin from '@components/auth/login/user-login-form';\nimport PageBanner from '../../../components/Common/PageBanner';\nimport Head from 'next/head';\nimport { login, resetLoginData } from '@redux/auth/actions';\nimport { ILogin, IUIConfig } from 'src/interfaces';\nimport { FormRegisterPlaceHolder } from '@components/common/layout';\nimport '../index.less';\n\ninterface IProps {\n  requesting: boolean;\n  success: boolean;\n  error: any;\n  ui: IUIConfig;\n  data: any;\n  login: Function;\n  resetLoginData: Function;\n}\n\nclass Login extends PureComponent<IProps> {\n  static layout: string = 'auth';\n\n  static authenticate: boolean = false;\n\n  rememberMe = false;\n\n  componentWillUnmount() {\n    const { resetLoginData: dispatchReset } = this.props;\n    dispatchReset();\n  }\n\n  submit = (data: ILogin) => {\n    const { login: dispatchLogin } = this.props;\n    dispatchLogin({\n      ...data,\n      remember: this.rememberMe\n    });\n  };\n\n  render() {\n    const {\n      requesting, error, success, ui\n    } = this.props;\n    return (\n      <>\n        <Head>\n          <title>User sign-in</title>\n        </Head>\n        <PageBanner\n          pageTitle=\"Sign In\"\n          homePageUrl=\"/\"\n          homePageText=\"Home\"\n          activePageText=\"Sign In\"\n          imgClass=\"bg-1\"\n        />\n\n        <div className=\"user-area-all-style log-in-area ptb-100\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <div className=\"contact-form-action\">\n                  <FormLogin\n                    singularTextModel={ui?.singularTextModel || 'Performer'}\n                    requesting={requesting}\n                    submit={this.submit.bind(this)}\n                    onRemember={(value) => { this.rememberMe = value; }}\n                    error={error}\n                    success={success}\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-lg-6\">\n                <div className=\"log-in-img\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStates = (state: any) => ({\n  ...state.auth.userLogin,\n  ui: state.ui\n});\nconst mapDispatch = { login, resetLoginData };\nexport default connect(mapStates, mapDispatch)(Login);\n"]},"metadata":{},"sourceType":"module"}