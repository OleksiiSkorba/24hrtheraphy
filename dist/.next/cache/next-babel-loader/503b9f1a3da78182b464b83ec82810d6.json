{"ast":null,"code":"var _jsxFileName = \"E:\\\\programData\\\\React\\\\cams-3\\\\user\\\\src\\\\components\\\\common\\\\base\\\\token-card.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Button, Popover } from 'antd';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport './token-card.less';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst TokenCard = _ref => {\n  let {\n    token,\n    price,\n    buying,\n    currencySymbol,\n    name,\n    description\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"token\", \"price\", \"buying\", \"currencySymbol\", \"name\", \"description\"]);\n\n  return __jsx(\"div\", {\n    className: \"token-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"coin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"current-coin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/crown.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"x\", token)))), __jsx(NumberFormat, {\n    value: token,\n    suffix: \" Token for \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), __jsx(NumberFormat, {\n    value: price,\n    prefix: currencySymbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, name), description ? __jsx(Popover, {\n    content: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 52\n    }\n  }, description)) : __jsx(\"div\", {\n    style: {\n      color: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 115\n    }\n  }, \"No description\"), __jsx(Button, {\n    type: \"primary\",\n    onClick: () => props.onBuyToken(),\n    loading: buying,\n    disabled: buying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"Buy Now\"));\n};\n\nTokenCard.defaultProps = {\n  onBuyToken: null,\n  buying: false,\n  currencySymbol: '$',\n  description: ''\n};\n\nconst mapStateToProps = state => _objectSpread({}, state.ui);\n\nexport default connect(mapStateToProps)(TokenCard);","map":{"version":3,"sources":["E:/programData/React/cams-3/user/src/components/common/base/token-card.tsx"],"names":["Button","Popover","NumberFormat","React","connect","TokenCard","token","price","buying","currencySymbol","name","description","props","color","onBuyToken","defaultProps","mapStateToProps","state","ui"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAYA,MAAMC,SAAS,GAAG;AAAA,MAAC;AACjBC,IAAAA,KADiB;AACVC,IAAAA,KADU;AACHC,IAAAA,MADG;AACKC,IAAAA,cADL;AACqBC,IAAAA,IADrB;AAC2BC,IAAAA;AAD3B,GAAD;AAAA,MAC4CC,KAD5C;;AAAA,SAGhB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,YAAT;AAAsB,IAAA,GAAG,EAAC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEGN,KAFH,CAFF,CADF,CADF,CADF,EAaE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAA4B,IAAA,MAAM,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,KAArB;AAA4B,IAAA,MAAM,EAAEE,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAhBF,EAiBGC,WAAW,GAAI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,WAA9B,CAA/B,CAAJ,GAAkG;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBhH,EAkBE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAE,MAAMD,KAAK,CAACE,UAAN,EAFjB;AAGE,IAAA,OAAO,EAAEN,MAHX;AAIE,IAAA,QAAQ,EAAEA,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBF,CAHgB;AAAA,CAAlB;;AA+BAH,SAAS,CAACU,YAAV,GAAyB;AACvBD,EAAAA,UAAU,EAAE,IADW;AAEvBN,EAAAA,MAAM,EAAE,KAFe;AAGvBC,EAAAA,cAAc,EAAE,GAHO;AAIvBE,EAAAA,WAAW,EAAE;AAJU,CAAzB;;AAOA,MAAMK,eAAe,GAAIC,KAAD,sBACnBA,KAAK,CAACC,EADa,CAAxB;;AAGA,eAAed,OAAO,CAACY,eAAD,CAAP,CAAyBX,SAAzB,CAAf","sourcesContent":["import { Button, Popover } from 'antd';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport './token-card.less';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\ninterface IProps {\n  name: string;\n  token: number;\n  price: number;\n  onBuyToken?: Function;\n  buying?: boolean;\n  currencySymbol?: string;\n  description?:string;\n}\n\nconst TokenCard = ({\n  token, price, buying, currencySymbol, name, description, ...props\n}: IProps) => (\n  <div className=\"token-card\">\n    <div className=\"card-image\">\n      <div className=\"coin\">\n        <div className=\"current-coin\">\n          <img src=\"/crown.png\" alt=\"\" />\n          <span>\n            x\n            {token}\n          </span>\n        </div>\n      </div>\n    </div>\n    {/* <NumberFormat value={}/> */}\n    <NumberFormat value={token} suffix=\" Token for \" />\n    <NumberFormat value={price} prefix={currencySymbol} />\n    <br />\n    <p>{name}</p>\n    {description ? (<Popover content={description}><div className=\"description\">{description}</div></Popover>) : (<div style={{ color: '#000000' }}>No description</div>) }\n    <Button\n      type=\"primary\"\n      onClick={() => props.onBuyToken()}\n      loading={buying}\n      disabled={buying}\n    >\n      Buy Now\n    </Button>\n  </div>\n);\nTokenCard.defaultProps = {\n  onBuyToken: null,\n  buying: false,\n  currencySymbol: '$',\n  description: ''\n};\n\nconst mapStateToProps = (state : any) => ({\n  ...state.ui\n});\nexport default connect(mapStateToProps)(TokenCard);\n"]},"metadata":{},"sourceType":"module"}