{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\programData\\\\React\\\\cams-3\\\\user\\\\pages\\\\contact-us\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Form, Input, Button, Divider, message } from 'antd';\nimport React, { PureComponent } from 'react';\nimport { postService } from '@services/post.service';\nimport Head from 'next/head';\nimport { FormRegisterPlaceHolder } from '@components/common/layout';\nimport { connect } from 'react-redux';\nimport PageBanner from '../../components/Common/PageBanner';\nimport './index.less';\nimport { getResponseError } from '@lib/utils';\n\nvar ContactPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ContactPage, _PureComponent);\n\n  var _super = _createSuper(ContactPage);\n\n  function ContactPage(props) {\n    var _this;\n\n    _classCallCheck(this, ContactPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(ContactPage, [{\n    key: \"onFinish\",\n    value: function () {\n      var _onFinish = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        var error;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.setState({\n                  loading: true\n                });\n                _context.next = 4;\n                return postService.createContactCotent(data);\n\n              case 4:\n                message.success('Email have been sent to a admin');\n                _context.next = 13;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                _context.next = 11;\n                return Promise.resolve(_context.t0);\n\n              case 11:\n                error = _context.sent;\n                message.error(getResponseError(error));\n\n              case 13:\n                _context.prev = 13;\n                this.setState({\n                  loading: false\n                });\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7, 13, 16]]);\n      }));\n\n      function onFinish(_x) {\n        return _onFinish.apply(this, arguments);\n      }\n\n      return onFinish;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ui = this.props.ui;\n      var loading = this.state.loading;\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Contact Us\")), __jsx(PageBanner, {\n        pageTitle: \"Contact Us\",\n        homePageUrl: \"/\",\n        homePageText: \"Home\",\n        activePageText: \"Contact Us\",\n        imgClass: \"bg-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: \"user-area-all-style log-in-area ptb-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        className: \"contact-form-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, __jsx(Form, {\n        onFinish: this.onFinish.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"form-contact-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"Contact\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, \"Please fill out all the info beside and we will get back to you with-in 48hrs.\"), __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }), __jsx(Form.Item, {\n        name: \"subject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, __jsx(Input, {\n        placeholder: \"Subject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      })), __jsx(Form.Item, {\n        name: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, __jsx(Input, {\n        placeholder: \"Your valid name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      })), __jsx(Form.Item, {\n        name: \"email\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your email!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, __jsx(Input, {\n        placeholder: \"Your valid email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      })), __jsx(Form.Item, {\n        name: \"message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, __jsx(Input.TextArea, {\n        placeholder: \"Your message\",\n        rows: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      })), __jsx(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        loading: loading,\n        disabled: loading,\n        block: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, \"Send\"))))), __jsx(\"div\", {\n        className: \"col-lg-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, __jsx(FormRegisterPlaceHolder, {\n        ui: ui,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }))))));\n    }\n  }]);\n\n  return ContactPage;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ui: state.ui\n  };\n};\n\nexport default connect(mapStateToProps)(ContactPage);","map":{"version":3,"sources":["E:/programData/React/cams-3/user/pages/contact-us/index.tsx"],"names":["Form","Input","Button","Divider","message","React","PureComponent","postService","Head","FormRegisterPlaceHolder","connect","PageBanner","getResponseError","ContactPage","props","state","loading","data","setState","createContactCotent","success","Promise","resolve","error","ui","onFinish","bind","type","required","mapStateToProps"],"mappings":"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","sourcesContent":["import {\n  Form, Input, Button, Divider, message\n} from 'antd';\nimport React, { PureComponent } from 'react';\nimport { postService } from '@services/post.service';\nimport Head from 'next/head';\nimport { FormRegisterPlaceHolder } from '@components/common/layout';\nimport { connect } from 'react-redux';\nimport PageBanner from '../../components/Common/PageBanner';\nimport { IUIConfig } from 'src/interfaces';\nimport './index.less';\nimport { getResponseError } from '@lib/utils';\n\ninterface IProps {\n  ui: IUIConfig;\n}\ninterface IStates {\n  loading: boolean;\n}\n\nclass ContactPage extends PureComponent<IProps, IStates> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      loading: false\n    };\n  }\n\n  async onFinish(data) {\n    try {\n      this.setState({ loading: true });\n      await postService.createContactCotent(data);\n      message.success('Email have been sent to a admin');\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { ui } = this.props;\n    const { loading } = this.state;\n    return (\n      <>\n        <Head>\n          <title>Contact Us</title>\n        </Head>\n        <PageBanner\n          pageTitle=\"Contact Us\"\n          homePageUrl=\"/\"\n          homePageText=\"Home\"\n          activePageText=\"Contact Us\"\n          imgClass=\"bg-1\"\n        />\n        <div className=\"user-area-all-style log-in-area ptb-100\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <div className=\"contact-form-action\">\n                <Form onFinish={this.onFinish.bind(this)}>\n              <span className=\"form-contact-title\">Contact</span>\n              <br />\n              <span>\n                Please fill out all the info beside and we will get back to you\n                with-in 48hrs.\n              </span>\n              <Divider />\n              <Form.Item name=\"subject\">\n                <Input placeholder=\"Subject\" />\n              </Form.Item>\n              <Form.Item name=\"name\">\n                <Input placeholder=\"Your valid name\" />\n              </Form.Item>\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  { type: 'email', message: 'The input is not valid E-mail!' },\n                  { required: true, message: 'Please input your email!' }\n                ]}\n              >\n                <Input placeholder=\"Your valid email\" />\n              </Form.Item>\n              <Form.Item name=\"message\">\n                <Input.TextArea placeholder=\"Your message\" rows={3} />\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  htmlType=\"submit\"\n                  type=\"primary\"\n                  loading={loading}\n                  disabled={loading}\n                  block\n                >\n                  Send\n                </Button>\n              </Form.Item>\n            </Form>\n                </div>\n              </div>\n\n              <div className=\"col-lg-6\">\n              <FormRegisterPlaceHolder ui={ui} />\n              </div>\n            </div>\n          </div>\n        </div>\n       \n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ ui: state.ui });\nexport default connect(mapStateToProps)(ContactPage);\n"]},"metadata":{},"sourceType":"module"}